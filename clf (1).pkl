{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fad3892f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import pickle \n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import KFold\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from imblearn.under_sampling import NearMiss\n",
    "from matplotlib import pyplot\n",
    "from numpy import where\n",
    "from imblearn.under_sampling import RandomUnderSampler\n",
    "import seaborn as sns\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "8bcf07d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[WinError 2] The system cannot find the file specified: 'Downloads'\n",
      "C:\\Users\\18329\\Downloads\n"
     ]
    }
   ],
   "source": [
    "cd Downloads"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "98234c6b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df= pd.read_csv('pre_term.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9bb0b785",
   "metadata": {},
   "outputs": [],
   "source": [
    "x= df.iloc[:,:-1]\n",
    "y = df.iloc[:,-1:]\n",
    "from sklearn.model_selection import train_test_split\n",
    "x_train,x_test,y_train,y_test = train_test_split(x, y, test_size= 0.1, random_state=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9ca7568e",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = LogisticRegression()\n",
    "grid={'C':10.0**np.arange(-2,3), 'penalty':['l1','l2']}\n",
    "cv=KFold(n_splits=5, shuffle=False)\n",
    "clf= GridSearchCV(model,grid, cv=cv, n_jobs=-1, scoring='f1_macro')\n",
    "rus= RandomUnderSampler(random_state=1)\n",
    "x_train_resampled,y_train_resampled = rus.fit_resample(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "93c4e519",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.6605719 , 0.43792077, 0.71805978, 0.37397031, 0.27962855,\n",
       "       0.45290529, 0.34576553, 0.29998184, 0.42574046, 0.48091911,\n",
       "       0.37292412, 0.72675912, 0.31204839, 0.52908856, 0.37440443,\n",
       "       0.33898572, 0.42409429, 0.42752326, 0.68505105, 0.35309028,\n",
       "       0.30178725, 0.45010362, 0.60839094, 0.36628442, 0.38998472,\n",
       "       0.32501587, 0.65474147, 0.27139482, 0.31508182, 0.81836944,\n",
       "       0.36539341, 0.56175666, 0.7919381 , 0.35816862, 0.18283017,\n",
       "       0.36846024, 0.34422777, 0.41871044, 0.34598343, 0.339283  ,\n",
       "       0.54611776, 0.32889888, 0.63073346, 0.37686666, 0.32292519,\n",
       "       0.86779469, 0.31939281, 0.61069746, 0.37645174, 0.40021496,\n",
       "       0.33392331, 0.41526666, 0.30672099, 0.63268765, 0.29798352,\n",
       "       0.30448849, 0.30644575, 0.63771891, 0.36568619, 0.35304844,\n",
       "       0.30380249, 0.28054779, 0.69350416, 0.82149842, 0.30930526,\n",
       "       0.42479113, 0.42311153, 0.28750194, 0.35940218, 0.28935412,\n",
       "       0.53498265, 0.41526666, 0.29262362, 0.40846436, 0.44348268,\n",
       "       0.2694924 , 0.72068938, 0.37844124, 0.32210896, 0.39928297,\n",
       "       0.30199023, 0.33277244, 0.31323255, 0.32868634, 0.43976993,\n",
       "       0.3182681 , 0.73797621, 0.33702259, 0.60798505, 0.36568619,\n",
       "       0.68133576, 0.35441857, 0.31000281, 0.30062742, 0.44210524,\n",
       "       0.73881917, 0.31889977, 0.71203585, 0.43893581, 0.35309028,\n",
       "       0.26752892, 0.59092355, 0.29690881, 0.25857426, 0.33978219,\n",
       "       0.36650033, 0.38381715, 0.65402189, 0.37915591, 0.71781213,\n",
       "       0.33994724, 0.69782802, 0.61248994, 0.73872798, 0.3029883 ,\n",
       "       0.39855472, 0.36022048, 0.38358941, 0.37069452, 0.26116964,\n",
       "       0.25762992, 0.16612052, 0.65053176, 0.3501724 , 0.63709521,\n",
       "       0.32929283, 0.34620139, 0.68404175, 0.37269893, 0.58541175,\n",
       "       0.40582255, 0.36231176, 0.73625022, 0.68154482, 0.31556926,\n",
       "       0.29727013, 0.28842825, 0.64508779, 0.38358941, 0.75115874,\n",
       "       0.58936727, 0.39003883, 0.36891875, 0.63674438, 0.4197002 ,\n",
       "       0.37292412, 0.27790293, 0.49062003, 0.2807029 , 0.33536467,\n",
       "       0.43715684, 0.36044246, 0.66599944, 0.68905212, 0.27641309,\n",
       "       0.59243306, 0.41790137, 0.29058322, 0.37755534, 0.66510902,\n",
       "       0.28073989, 0.69262194, 0.44260608, 0.76632511, 0.27988942,\n",
       "       0.35555228, 0.29389657, 0.31999581, 0.6723058 , 0.36698215,\n",
       "       0.40372669, 0.31389386, 0.38534929, 0.31991894, 0.28981374,\n",
       "       0.37614788, 0.30006555, 0.30775943, 0.68200246, 0.37470773,\n",
       "       0.37292412, 0.37387574, 0.39088433, 0.43695455, 0.46248074,\n",
       "       0.42156842, 0.81583206, 0.34871655, 0.53357061, 0.44252427,\n",
       "       0.28418181, 0.33728043, 0.67026444, 0.35344844, 0.81428177,\n",
       "       0.43651982, 0.38527075, 0.33366841, 0.3484405 , 0.32861317,\n",
       "       0.44978319, 0.39119263, 0.28682459, 0.28247623, 0.38565599,\n",
       "       0.40977126, 0.32207655, 0.44766006, 0.42374095, 0.39119263,\n",
       "       0.19059835, 0.27809624, 0.69632774, 0.39150102, 0.4691385 ,\n",
       "       0.42702641, 0.36074097, 0.42861105, 0.29211861, 0.43476262,\n",
       "       0.37463003, 0.27790293, 0.39144683, 0.33670189, 0.32084697,\n",
       "       0.34203491, 0.47767868, 0.24633566, 0.39979663, 0.32020542,\n",
       "       0.35952938, 0.36249999, 0.72437441, 0.29842254, 0.37882321,\n",
       "       0.62800556, 0.33728043, 0.26743486, 0.33756989, 0.31693696,\n",
       "       0.37521764, 0.34961716, 0.45973346, 0.47655216, 0.41487783,\n",
       "       0.46876098, 0.66650148, 0.30496923, 0.32868634, 0.39300885,\n",
       "       0.35977669, 0.34167615, 0.39812092, 0.33677595, 0.74553042,\n",
       "       0.34695438, 0.64963675, 0.3984312 , 0.33756989, 0.64594002,\n",
       "       0.30491816, 0.35713123, 0.37793761, 0.31879795, 0.29224703,\n",
       "       0.6138856 , 0.69354417, 0.82468208, 0.38056776, 0.25056973,\n",
       "       0.64820726, 0.43258362, 0.36876737, 0.33749574, 0.28077688,\n",
       "       0.7403174 , 0.40925937, 0.38769146, 0.65132748, 0.31879795,\n",
       "       0.411149  , 0.68138253, 0.40977126, 0.30997106, 0.33478775,\n",
       "       0.6924966 , 0.41972806, 0.79589912, 0.415815  , 0.40535817,\n",
       "       0.38419185, 0.51722086, 0.39323862, 0.70981046, 0.41043927,\n",
       "       0.23460924, 0.32154381, 0.6074822 , 0.37824204, 0.36022048,\n",
       "       0.57916831, 0.43047815, 0.38381715, 0.74344846, 0.38746286,\n",
       "       0.41463804, 0.3584663 , 0.70498515, 0.31214194, 0.34210955,\n",
       "       0.47064803, 0.35802346, 0.24923196, 0.83054099, 0.73581156,\n",
       "       0.41341764, 0.29331236, 0.428294  , 0.26727529, 0.67805789,\n",
       "       0.23780879, 0.66774126, 0.42156842, 0.57882184, 0.40703609,\n",
       "       0.35627403, 0.70240187, 0.38761274, 0.76895153, 0.26446136,\n",
       "       0.32918471, 0.35814872, 0.43921375, 0.45190816, 0.30932976,\n",
       "       0.60086471, 0.30816994, 0.37614788, 0.71102227, 0.37686666,\n",
       "       0.37683357, 0.29235569, 0.41669517, 0.25306993, 0.72607032,\n",
       "       0.31742595, 0.30803966, 0.26408533, 0.29134518, 0.38178934,\n",
       "       0.67579272, 0.71869675, 0.28768658, 0.60293069, 0.39096328,\n",
       "       0.32874986, 0.34598343, 0.35995635, 0.43071429, 0.37224871,\n",
       "       0.41983412, 0.55831034, 0.26870501, 0.72092655, 0.63992142,\n",
       "       0.30638202, 0.64170942, 0.84950214, 0.44394024, 0.36058562,\n",
       "       0.64441633, 0.44605998, 0.47747355, 0.33403781, 0.90841879,\n",
       "       0.62521089, 0.50466176, 0.3894742 , 0.36044246, 0.36369763,\n",
       "       0.31943263, 0.37004621, 0.34396906, 0.33369036, 0.3528285 ,\n",
       "       0.44678184, 0.30290698, 0.33657705, 0.54144051, 0.50913144,\n",
       "       0.45564004, 0.42861105, 0.72900274, 0.44465957, 0.6502622 ,\n",
       "       0.64014331, 0.29568083, 0.57830221, 0.33029647, 0.30062742,\n",
       "       0.37816406, 0.63969947, 0.41200934, 0.59524351, 0.26089292,\n",
       "       0.42742162, 0.32700723, 0.40657127, 0.66790591, 0.3141952 ,\n",
       "       0.85946128, 0.26132629, 0.33749574, 0.2636756 , 0.50164208,\n",
       "       0.63095774, 0.3716954 , 0.42101796, 0.37269893, 0.43765646,\n",
       "       0.6484935 , 0.69416465, 0.50026646, 0.2843321 ])"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf= LogisticRegression().fit(x_train_resampled,y_train_resampled)\n",
    "y_pred= clf.predict_proba(x_test)[:,1]\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5f65f3da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function BufferedWriter.close>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pickle_out=open('clf.pkl','wb')\n",
    "pickle.dump(clf,pickle_out)\n",
    "pickle_out.close"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c98c878f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
